### Features.

if [ "$debug" = "1" ]; then
  if [ "$negate" = "1" ]; then
    writeln "%f debugging off.";
    feature_debug=0;
    return 0;
  else
    feature_debug=1;
    writeln "%f debugging on.";
    return 0;
  fi
fi


### Show feature(s) Configuration.
if [ $show -eq 1 ]; then
  if [ $config -eq 1 ]; then
    if [ "${user_text[$next_cmd_pos]}" ]; then
      ### Display a feature.
      if record_exists "request" "${user_text[$next_cmd_pos]}" ||
         record_exists "alert" "${user_text[$next_cmd_pos]}"; then
        ### Single feature Header.
        writeln;
        local item=0;
        local temp_item=0;
          while true; do
            if [ "${field[$item]}" ]; then
              writeln "\040${field[$item]}";
              field[$temp_item]=${field[$item]};
              (( temp_item++ ));
            fi
            [ $item = $MAX_FIELDS ] && break;
            (( item++ ));
          done;
        writeln;
        break;
      else
        writeln "%e no such feature ${user_text[$next_cmd_pos]}.";
        break;
      fi
    else
      ### Display All Hosts.
      local line_count=0;
      load_records "$config_dir/features";
      local rec_id=0;

      ### Generic Header.
      writeln "Realtime Config...\n";
      writeln "! netmon v$version configuration";
      writeln "! config_file: $config_dir/features";
      writeln "! device_name: $nickname";
      writeln "! displaying features configured";
      writeln;

      ### Parse Record(s), and display according to $1.
      while parse_record $rec_id; do
        writeln "%d record index $rec_id.";
        local item=1;
        local temp_item=1;
        ### Type of Show Selection.
        if [ "$data_type" = "request" ] ||
           [ "$data_type" = "alert" ]; then
          writeln "$data_type $type_id";
          while true; do
            if [ "${field[$item]}" ]; then
              writeln "\040${field[$item]}";
              field[$temp_item]=${field[$item]};
              (( temp_item++ ));
            fi
            [ $item = $MAX_FIELDS ] && break;
            (( item++ ));
          done;
          writeln "!";
          (( line_count++ ));
        fi
        ### End Of Display.
        (( rec_id++ ));
      done;
      ### Show Config Record Count.
      [ "$break_now" = "0" ] && writeln "! total \"$line_count\" feature(s)";
      return 0;
    fi
  fi
fi

return 1;
